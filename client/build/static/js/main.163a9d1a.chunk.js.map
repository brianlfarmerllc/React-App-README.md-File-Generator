{"version":3,"sources":["components/FormComponents/index.js","components/Form/index.js","components/Header/index.js","pages/Form1/index.js","utils/API.js","pages/Form2/index.js","pages/Done/index.js","components/Modal/index.js","App.js","index.js"],"names":["Input","props","className","htmlFor","label","type","name","onChange","handleChange","value","FormBtn","style","textAlign","width","children","Text","rows","Select","defaultValue","Form","marginBottom","Header","href","target","Form1","form","published","history","useHistory","username","email","repo","service","site","title","description","onClick","event","preventDefault","push","data","console","log","axios","post","get","path","license","install","tech","API","then","res","catch","err","error","Done","setForm","initalForm","setModal","setPublished","from","useLocation","state","pathname","download","replace","Modal","App","useState","modal","exact","Form2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.163a9d1a.chunk.js","sourcesContent":["\nimport React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            <input className=\"form-control\"\n                type={props.type}\n                name={props.name}\n                onChange={props.handleChange}\n                value={props.value} />\n        </div>\n    );\n}\n\nexport function FormBtn(props) {\n    return (\n        // <div className=\"row mt-4\" style={{textAlign:\"center\"}}>\n        <div className=\"form-group\" style={{ textAlign: \"center\", }}>\n            <button {...props} style={{ width: \"55%\", }} type=\"submit\">\n                {props.children}\n            </button>\n        </div>\n        // </div>\n    );\n}\n\nexport function Text(props) {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            <textarea className=\"form-control\"\n                type={props.type}\n                name={props.name}\n                onChange={props.handleChange}\n                value={props.value}\n                rows={props.rows} />\n        </div>\n    );\n}\n\nexport function Select(props) {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            <select className=\"form-select\"\n                type={props.type}\n                name={props.name}\n                onChange={props.handleChange}\n            >\n                <option value=\"\" defaultValue>Choose Yes or No</option>\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n            </select>\n        </div>\n    );\n}","import React from 'react'\nimport \"./form.css\"\n\nfunction Form(props) {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\" style={{ marginBottom: \"0\" }}>\n                <div className=\" col-11 col-xl-8\">\n                    <div className=\"form\">\n                        <div className=\"form-header\">\n                            <h2>readme generator</h2>\n                        </div>\n                        <div className=\"form-content\">\n                            <form>\n                                {props.children}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Form","import React from 'react';\nimport \"./header.css\"\n\n\nfunction Header() {\n    return (\n        <header>\n            <div className=\"container-fluid content\">\n                <h1>Don't Forget to <span>README</span></h1>\n                <h3>Clean and Consistent Documentation</h3>      \n                <a className=\"github\" href=\"https://www.github.com/brianlfarmerllc/\" target=\"blank\"><i\n                  className=\"fa fa-github\"></i></a>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react';\nimport Form from \"../../components/Form\";\nimport { Input, FormBtn, Text } from \"../../components/FormComponents\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Form1({ form, handleChange, published }) {\n    let history = useHistory();\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        history.push(\"/details\");\n    }\n\n    return (\n        <Form>\n            <Input\n                htmlFor={\"github\"}\n                label={\"github username\"}\n                type={\"text\"}\n                name={\"username\"}\n                handleChange={handleChange}\n                value={form.username || \"\"} />\n            <Input\n                htmlFor={\"email\"}\n                label={\"email\"}\n                type={\"text\"}\n                name=\"email\"\n                handleChange={handleChange}\n                value={form.email || \"\"} />\n            <Input\n                htmlFor={\"repo\"}\n                label={\"repo url\"}\n                type={\"text\"}\n                name=\"repo\"\n                handleChange={handleChange}\n                value={form.repo || \"\"} />\n\n            {\n                published.published === \"Yes\" ?\n                    <>\n                        <Input\n                            htmlFor={\"service\"}\n                            label={\"site published with\"}\n                            type={\"text\"}\n                            name=\"service\"\n                            handleChange={handleChange}\n                            value={form.service || \"\"} />\n                        <Input\n                            htmlFor={\"site\"}\n                            label={\"site url\"}\n                            type={\"text\"}\n                            name=\"site\"\n                            handleChange={handleChange}\n                            value={form.site || \"\"} />\n                    </>\n                    : null\n            }\n            <Input\n                htmlFor={\"title\"}\n                label={\"project title\"}\n                type={\"text\"}\n                name=\"title\"\n                handleChange={handleChange}\n                value={form.title || \"\"} />\n            <Text\n                htmlFor={\"description\"}\n                label={\"project description\"}\n                type={\"text\"}\n                rows={\"7\"}\n                name={\"description\"}\n                handleChange={handleChange}\n                value={form.description || \"\"} />\n            <FormBtn onClick={handleSubmit}>Next</FormBtn>\n        </Form>\n    )\n}\n\nexport default Form1","import axios from \"axios\";\n\nexport default {\n    createReadme: function (data) {\n        console.log(data)\n        return axios.post(\"/createfile\", data)\n    },\n    download: function () {\n        return axios.get(\"/download\")\n    }\n}","import React from 'react';\nimport API from \"../../utils/API\";\nimport Form from \"../../components/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Input, FormBtn, Text } from \"../../components/FormComponents\";\n\nfunction Form1({form, handleChange}) {\n    let history = useHistory();\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        API.createReadme(form)\n            .then(res => {\n                console.log(\"success\")\n                history.push(\"/done\")\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n\n    return (\n      <Form>\n                            <Input\n                                htmlFor={\"path\"}\n                                label={\"gif or image path\"}\n                                type={\"text\"}\n                                name={\"path\"}\n                                handleChange={handleChange}\n                                value={form.path || \"\"} />\n                            <Input\n                                htmlFor={\"license\"}\n                                label={\"type of license\"}\n                                type={\"text\"}\n                                name=\"license\"\n                                handleChange={handleChange}\n                                value={form.license || \"\"} />\n                            <Text\n                                htmlFor={\"install\"}\n                                label={\"installation and usage instructions\"}\n                                type={\"text\"}\n                                rows={\"6\"}\n                                name={\"install\"}\n                                handleChange={handleChange}\n                                value={form.install || \"\"} />\n                            <Text\n                                htmlFor={\"tech\"}\n                                label={\"project technologies\"}\n                                type={\"text\"}\n                                rows={\"6\"}\n                                name={\"tech\"}\n                                handleChange={handleChange}\n                                value={form.tech || \"\"} />\n\n                            <FormBtn onClick={handleSubmit}>create readme</FormBtn>\n\n           </Form>\n    )\n}\n\nexport default Form1","import React from \"react\";\nimport download from \"downloadjs\"\nimport API from \"../../utils/API\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Form from \"../../components/Form\";\nimport { FormBtn } from \"../../components/FormComponents\";\n\nfunction Done({ setForm, initalForm, setModal, setPublished }) {\n    let history = useHistory();\n    let location = useLocation();\n    let { from } = location.state || { from: { pathname: \"/\" } };\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        API.download()\n            .then(res => {\n                download(res.data, \"README.md\")\n                setForm(initalForm)\n                setModal(true)\n                setPublished(\"\")\n                history.replace(from)\n            })\n            .catch(err => {\n                console.error(err);\n            })\n\n    }\n    function handleReturn(event) {\n        event.preventDefault()\n        setForm(initalForm)\n        setModal(true)\n        setPublished(\"\")\n        history.replace(from)\n    }\n    return (\n        <Form>\n            <h3 style={{ textAlign: \"center\" }}>Your README was Successfully Created</h3>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <FormBtn onClick={handleSubmit}>download readme</FormBtn>\n                </div>\n                <div className=\"col\">\n                    <FormBtn onClick={handleReturn}>Start Over</FormBtn>\n                </div>\n\n\n            </div>\n        </Form>\n    )\n}\n\nexport default Done","import React from 'react';\nimport \"./modal.css\"\n\nfunction Modal(props) {\n    return (\n        <div className=\"container popup\">\n            <div className=\"row justify-content-center\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\n\nexport default Modal;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport { Select } from \"./components/FormComponents\";\nimport Form from \"./components/Form\"\nimport Header from \"./components/Header\";\nimport Form1 from \"./pages/Form1\";\nimport Form2 from \"./pages/Form2\";\nimport Done from \"./pages/Done\";\nimport Modal from \"./components/Modal\"\nimport './App.css';\n\nfunction App() {\n  const initalForm = {}\n  const [form, setForm] = useState(initalForm);\n  const [published, setPublished] = useState(\"\");\n  const [modal, setModal] = useState(true)\n\n  function handleChange(event) {\n    let { name, value } = event.target\n    setForm({ ...form, [name]: value })\n  }\n\n  function handleSelectChange(event) {\n    const { name, value } = event.target\n    if (value === \"\") {\n      return\n    } else {\n      setPublished({ [name]: value })\n      setModal(false)\n    }\n  }\n\n  return (\n    <Router>\n      <main>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Form1 form={form} handleChange={handleChange} \n            published={published}/>\n          </Route>\n          <Route exact path=\"/details\">\n            <Form2 form={form} handleChange={handleChange} />\n          </Route>\n          <Route exact path=\"/done\">\n            <Done setForm={setForm} initalForm={initalForm} \n            setModal={setModal} setPublished={setPublished}/>\n          </Route>\n        </Switch>\n      </main>\n      {\n        modal ?\n          <Modal>\n            <Form>\n              <Select\n                htmlFor={\"select\"}\n                label={\"Is this application published online?\"}\n                name={\"published\"}\n                type={\"select\"}\n                handleChange={handleSelectChange}\n              />\n            </Form>\n          </Modal> :\n          null\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from '../public/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}